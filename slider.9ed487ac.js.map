{"version":3,"sources":["js/slider.js"],"names":["document","addEventListener","ItcSimpleSlider","loop","autoplay","swipe","_refreshExtremeValues","_minOrder","parseInt","_elsItem","dataset","order","_maxOrder","_$itemWithMinOrder","_$itemWithMaxOrder","_minTranslate","translate","_maxTranslate","i","length","$item","_balancingItems","_balancingItemsFlag","translateX","wrapperRect","_elWrapper","getBoundingClientRect","halfWidthItem","width","count","_direction","wrapperLeft","left","$min","right","_width","style","transform","wrapperRight","$max","requestAnimationFrame","bind","_addEventListener","$items","_elItems","onSwipeStart","e","_autoplay","target","closest","CLASS_NAME_CONTROL","event","type","search","touches","_swipeStartPosX","clientX","_swipeStartPosY","clientY","_hasSwipeState","_hasSwiping","onSwipeMove","diffPosX","diffPosY","Math","abs","preventDefault","_config","_currentIndex","value","_transform","classList","add","TRANSITION_NONE","onSwipeEnd","changedTouches","remove","SWIPE_THRESHOLD","_move","_el","$target","contains","slide","slideTo","index","_moveTo","window","dispatchEvent","CustomEvent","bubbles","supportsPassive","opts","Object","defineProperty","get","err","passive","visibilityState","_supportResizeObserver","ResizeObserver","entries","newTranslateX","contentBoxSize","contentRect","newWidth","inlineSize","toFixed","observe","next","prev","action","moveTo","useTransition"],"mappings":";AAAAA,SAASC,iBAAiB,mBAAoB,WAC/B,IAAIC,EAAgB,UAAW,CAC1CC,MAAM,EACNC,UAAU,EACVC,OAAO,MAIX,MAAMH,EAkNJI,wBACE,KAAKC,UAAYC,SAAS,KAAKC,SAAS,GAAGC,QAAQC,OACnD,KAAKC,UAAY,KAAKL,UACtB,KAAKM,mBAAqB,KAAKJ,SAAS,GACxC,KAAKK,mBAAqB,KAAKD,mBAC/B,KAAKE,cAAgBP,SAAS,KAAKC,SAAS,GAAGC,QAAQM,WACvD,KAAKC,cAAgB,KAAKF,cAC1B,IAAK,IAAIG,EAAI,EAAGC,EAAS,KAAKV,SAASU,OAAQD,EAAIC,EAAQD,IAAK,CAC9D,IAAIE,EAAQ,KAAKX,SAASS,GACtBP,EAAQH,SAASY,EAAMV,QAAQC,OAC/BA,EAAQ,KAAKJ,WACf,KAAKA,UAAYI,EACjB,KAAKE,mBAAqBO,EAC1B,KAAKL,cAAgBP,SAASY,EAAMV,QAAQM,YACnCL,EAAQ,KAAKC,YACtB,KAAKA,UAAYD,EACjB,KAAKG,mBAAqBM,EAC1B,KAAKH,cAAgBT,SAASY,EAAMV,QAAQM,aAKlDK,kBACE,GAAK,KAAKC,oBAAV,CAGA,IAIIN,EAEAO,EALAC,EADW,KAAKC,WACOC,wBACvBC,EAAgBH,EAAYI,MAAQ,EACpCC,EAAQ,KAAKpB,SAASU,OAI1B,GAAwB,SAApB,KAAKW,WAAuB,CAC9B,IAAIC,EAAcP,EAAYQ,KAC1BC,EAAO,KAAKpB,mBAChBG,EAAY,KAAKD,cACJkB,EAAKP,wBACHQ,MAAQH,EAAcJ,IACnCM,EAAKvB,QAAQC,MAAQ,KAAKJ,UAAYsB,EACtCb,GAAaa,EACbI,EAAKvB,QAAQM,UAAYA,EACzBO,EAAaP,EAAY,KAAKmB,OAC9BF,EAAKG,MAAMC,UAAY,cAAgBd,EAAa,MACpD,KAAKjB,8BAEF,GAAwB,SAApB,KAAKwB,WAAuB,CACrC,IAAIQ,EAAed,EAAYU,MAC3BK,EAAO,KAAKzB,mBAChBE,EAAY,KAAKC,cACJsB,EAAKb,wBACHM,KAAOM,EAAeX,IACnCY,EAAK7B,QAAQC,MAAQ,KAAKC,UAAYiB,EACtCb,GAAaa,EACbU,EAAK7B,QAAQM,UAAYA,EACzBO,EAAaP,EAAY,KAAKmB,OAC9BI,EAAKH,MAAMC,UAAY,cAAgBd,EAAa,MACpD,KAAKjB,yBAGTkC,sBAAsB,KAAKnB,gBAAgBoB,KAAK,QAGlDC,oBACE,IAAIC,EAAS,KAAKC,SA8ClB,SAASC,EAAaC,GAEpB,GADA,KAAKC,UAAU,SACXD,EAAEE,OAAOC,QAAQ/C,EAAgBgD,oBAArC,CAGA,IAAIC,EAAmC,IAA3BL,EAAEM,KAAKC,OAAO,SAAiBP,EAAEQ,QAAQ,GAAKR,EAC1D,KAAKS,gBAAkBJ,EAAMK,QAC7B,KAAKC,gBAAkBN,EAAMO,QAC7B,KAAKC,gBAAiB,EACtB,KAAKC,aAAc,GAGrB,SAASC,EAAYf,GACnB,GAAK,KAAKa,eAAV,CAGA,IAAIR,EAAmC,IAA3BL,EAAEM,KAAKC,OAAO,SAAiBP,EAAEQ,QAAQ,GAAKR,EACtDgB,EAAW,KAAKP,gBAAkBJ,EAAMK,QACxCO,EAAW,KAAKN,gBAAkBN,EAAMO,QAC5C,IAAK,KAAKE,YAAa,CACrB,GAAII,KAAKC,IAAIF,GAAYC,KAAKC,IAAIH,IAAoC,IAAvBE,KAAKC,IAAIH,GAEtD,YADA,KAAKH,gBAAiB,GAGxB,KAAKC,aAAc,EAErBd,EAAEoB,iBACG,KAAKC,QAAQhE,OACZ,KAAKiE,cAAgB,GAAK,KAAK3D,SAASU,QAAU2C,GAAY,IAChEA,GAAsB,GAEpB,KAAKM,eAAiB,GAAKN,GAAY,IACzCA,GAAsB,IAG1B,IAAIO,EAAQP,EAAW,KAAKrC,WAAWC,wBAAwBE,MAC3DL,EAAa,KAAK+C,WAAaD,EACnC,KAAKzB,SAAS2B,UAAUC,IAAItE,EAAgBuE,iBAC5ClD,GAA0B,KAAKY,OAC/B,KAAKS,SAASR,MAAMC,UAAY,cAAgBd,EAAa,OAG/D,SAASmD,EAAW5B,GAClB,GAAK,KAAKa,eAAV,CAGA,IAAIR,EAAmC,IAA3BL,EAAEM,KAAKC,OAAO,SAAiBP,EAAE6B,eAAe,GAAK7B,EAC7DgB,EAAW,KAAKP,gBAAkBJ,EAAMK,QAC5C,GAAiB,IAAbM,EAAJ,CAIK,KAAKK,QAAQhE,OACZ,KAAKiE,cAAgB,GAAK,KAAK3D,SAASU,QAAU2C,GAAY,IAChEA,GAAsB,GAEpB,KAAKM,eAAiB,GAAKN,GAAY,IACzCA,GAAsB,IAG1B,IAAIO,EAASP,EAAW,KAAKrC,WAAWC,wBAAwBE,MAAS,IACzE,KAAKgB,SAAS2B,UAAUK,OAAO1E,EAAgBuE,iBAC3CJ,EAAQnE,EAAgB2E,iBAC1B,KAAK/C,WAAa,OAClB,KAAKgD,SACIT,GAASnE,EAAgB2E,iBAClC,KAAK/C,WAAa,OAClB,KAAKgD,UAEL,KAAKhD,WAAa,OAClB,KAAKgD,SAEP,KAAKnB,gBAAiB,EAClB,KAAKQ,QAAQhE,MACf,KAAK4C,iBAzBL,KAAKY,gBAAiB,GAuD1B,GAZA,KAAKoB,IAAI9E,iBAAiB,QAxI1B,SAAiB6C,GACf,IAAIkC,EAAUlC,EAAEE,OAEhB,GADA,KAAKD,UAAU,QACXiC,EAAQT,UAAUU,SAAS/E,EAAgBgD,oBAC7CJ,EAAEoB,iBACF,KAAKpC,WAAakD,EAAQtE,QAAQwE,MAClC,KAAKJ,aACA,GAAIE,EAAQtE,QAAQyE,QAAS,CAClCrC,EAAEoB,iBACF,IAAIkB,EAAQ5E,SAASwE,EAAQtE,QAAQyE,SACrC,KAAKE,QAAQD,GAEX,KAAKjB,QAAQhE,MACf,KAAK4C,aA2HkCN,KAAK,OAE5C,KAAK0B,QAAQhE,OACfwC,EAAO1C,iBAAiB,mBA1H1B,WACM,KAAKqB,sBAGT,KAAKA,qBAAsB,EAC3BgE,OAAO9C,sBAAsB,KAAKnB,gBAAgBoB,KAAK,SAqHOA,KAAK,OACnEE,EAAO1C,iBAAiB,gBAnH1B,WACE,KAAKqB,qBAAsB,EAC3B,KAAKyD,IAAIQ,cACP,IAAIC,YAAY,iBAAkB,CAChCC,SAAS,MA+G4ChD,KAAK,QAG5D,KAAK0B,QAAQ/D,WACf,KAAK2E,IAAI9E,iBAAiB,aA9G5B,WACE,KAAK8C,UAAU,SA6GsCN,KAAK,OAC1D,KAAKsC,IAAI9E,iBAAiB,aA3G5B,WACM,KAAKkE,QAAQhE,MACf,KAAK4C,aAyG8CN,KAAK,QAGxD,KAAK0B,QAAQ9D,MAAO,CACtB,IAAIqF,GAAkB,EACtB,IACE,IAAIC,EAAOC,OAAOC,eAAe,GAAI,UAAW,CAC9CC,IAAK,WACHJ,GAAkB,KAGtBJ,OAAOrF,iBAAiB,sBAAuB,KAAM0F,GACrD,MAAOI,IACT,KAAKhB,IAAI9E,iBACP,aACA4C,EAAaJ,KAAK,QAClBiD,GACI,CACEM,SAAS,IAIjB,KAAKjB,IAAI9E,iBACP,YACA4D,EAAYpB,KAAK,QACjBiD,GACI,CACEM,SAAS,IAIjB,KAAKjB,IAAI9E,iBAAiB,YAAa4C,EAAaJ,KAAK,OACzD,KAAKsC,IAAI9E,iBAAiB,YAAa4D,EAAYpB,KAAK,OACxDzC,SAASC,iBAAiB,WAAYyE,EAAWjC,KAAK,OACtDzC,SAASC,iBAAiB,UAAWyE,EAAWjC,KAAK,OACrDzC,SAASC,iBAAiB,WAAYyE,EAAWjC,KAAK,QAExD,KAAKsC,IAAI9E,iBAAiB,YA5D1B,SAAqB6C,GACnBA,EAAEoB,kBA2D+CzB,KAAK,OAExDzC,SAASC,iBAAiB,mBA1D1B,WACmC,WAA7BD,SAASiG,gBACX,KAAKlD,UAAU,QACuB,YAA7B/C,SAASiG,iBACd,KAAK9B,QAAQhE,MACf,KAAK4C,aAqDsDN,KAAK,OA2BlE,KAAKyD,yBACc,IAAIC,eA1B3B,SAA0BC,GACxB,IAKIC,EALAC,EAAiBF,EAAQ,GAAGE,eAC5BC,EAAcH,EAAQ,GAAGG,YACzBC,EAAWD,EACXA,EAAY3E,OACX0E,EAAe,IAAMA,GAAgBG,WAE1C,GAAI,KAAKtE,OAAOuE,QAAQ,KAAOF,EAASE,QAAQ,GAAhD,CAGA,KAAK3D,UAAU,QACf,KAAKH,SAAS2B,UAAUC,IAAItE,EAAgBuE,iBAC5C,KAAKtC,OAAS3B,SAASgG,EAASE,QAAQ,GAAI,IAC5CL,EAAgBG,EAAWhG,SAAS,KAAKoC,SAASlC,QAAQM,UAAW,IACrE,KAAK4B,SAASR,MAAMC,UAAY,cAAgBgE,EAAgB,MAEhE,IADA,IAAI1D,EAAS,KAAKlC,SACTS,EAAI,EAAGA,EAAIyB,EAAOxB,OAAQD,IAEjCmF,EADiB7F,SAASmC,EAAOzB,GAAGR,QAAQM,WACfwF,EAC7B7D,EAAOzB,GAAGkB,MAAMC,UAAY,cAAgBgE,EAAgB,MAE1D,KAAKlC,QAAQhE,MACf,KAAK4C,cAIkDN,KAAK,OAC/CkE,QAAQ,KAAKlF,YAKhCmF,OACE,KAAK9E,WAAa,OAClB,KAAKgD,QAGP+B,OACE,KAAK/E,WAAa,OAClB,KAAKgD,QAGP1E,SAAS0G,GACP,KAAK/D,UAAU,QAGjBgE,OAAO3B,EAAO4B,GACZ,KAAK3B,QAAQD,EAAO4B","file":"slider.9ed487ac.js","sourceRoot":"../src","sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n  var slider = new ItcSimpleSlider('.slider', {\n    loop: true,\n    autoplay: true,\n    swipe: true,\n  });\n});\n\nclass ItcSimpleSlider {\n  // static PREFIX = 'slider';\n  // static CLASS_NAME_ITEM = `${ItcSimpleSlider.PREFIX}__item`;\n  // static CLASS_NAME_ITEM_ACTIVE = `${ItcSimpleSlider.PREFIX}__item--active`;\n  // static CLASS_NAME_ITEMS = `${ItcSimpleSlider.PREFIX}__items`;\n  // static CLASS_NAME_INDICATOR = `${ItcSimpleSlider.PREFIX}__indicator`;\n  // static CLASS_NAME_INDICATOR_ACTIVE = `${ItcSimpleSlider.PREFIX}__indicator--active`;\n  // static CLASS_NAME_INDICATORS = `${ItcSimpleSlider.PREFIX}__indicators`;\n  // static CLASS_NAME_CONTROL = `${ItcSimpleSlider.PREFIX}__control`;\n  // static CLASS_NAME_CONTROL_PREV = `${ItcSimpleSlider.PREFIX}__control--prev`;\n  // static CLASS_NAME_CONTROL_NEXT = `${ItcSimpleSlider.PREFIX}__control--next`;\n  // static CLASS_NAME_CONTROL_SHOW = `${ItcSimpleSlider.PREFIX}__control--show`;\n  // static SELECTOR_ITEMS = `.${ItcSimpleSlider.CLASS_NAME_ITEMS}`;\n  // static SELECTOR_ITEM = `.${ItcSimpleSlider.CLASS_NAME_ITEM}`;\n  // static SELECTOR_ITEM_ACTIVE = `.${ItcSimpleSlider.CLASS_NAME_ITEM_ACTIVE}`;\n  // static SELECTOR_INDICATOR_ACTIVE = `.${ItcSimpleSlider.CLASS_NAME_INDICATOR_ACTIVE}`;\n  // static SELECTOR_INDICATORS = `.${ItcSimpleSlider.CLASS_NAME_INDICATORS}`;\n  // static SELECTOR_WRAPPER = `.${ItcSimpleSlider.PREFIX}__wrapper`;\n  // static SELECTOR_CONTROL = `.${ItcSimpleSlider.CLASS_NAME_CONTROL}`;\n  // static SELECTOR_CONTROL_NEXT = `.${ItcSimpleSlider.CLASS_NAME_CONTROL_NEXT}`;\n  // static SELECTOR_CONTROL_PREV = `.${ItcSimpleSlider.CLASS_NAME_CONTROL_PREV}`;\n\n  // static SWIPE_THRESHOLD = 20;\n\n  // static TRANSITION_NONE = 'transition-none';\n\n  // constructor(target, config) {\n  //   this._el = typeof target === 'string' ? document.querySelector(target) : target;\n  //   this._elWrapper = this._el.querySelector(ItcSimpleSlider.SELECTOR_WRAPPER);\n  //   this._elItems = this._el.querySelector(ItcSimpleSlider.SELECTOR_ITEMS);\n  //   this._elsItem = this._el.querySelectorAll(ItcSimpleSlider.SELECTOR_ITEM);\n\n  //   this._currentIndex = 0;\n\n  //   this._minOrder = 0;\n  //   this._maxOrder = 0;\n  //   this._$itemWithMinOrder = null;\n  //   this._$itemWithMaxOrder = null;\n  //   this._minTranslate = 0;\n  //   this._maxTranslate = 0;\n\n  //   this._direction = 'next';\n\n  //   this._balancingItemsFlag = false;\n\n  //   this._transform = 0;\n\n  //   this._width = this._elWrapper.getBoundingClientRect().width;\n\n  //   this._supportResizeObserver = typeof window.ResizeObserver !== 'undefined';\n\n  //   this._hasSwipeState = false;\n  //   this._swipeStartPosX = 0;\n\n  //   this._intervalId = null;\n\n  //   const defaultConfig = {\n  //     autoplay: false,\n  //     loop: true,\n  //     indicators: true,\n  //     interval: 3000,\n  //     swipe: true,\n  //   };\n  //   this._config = Object.assign(defaultConfig, config);\n  //   this._elItems.dataset.translate = 0;\n\n  //   this._elsItem.forEach((item, index) => {\n  //     item.dataset.order = index;\n  //     item.dataset.index = index;\n  //     item.dataset.translate = 0;\n  //   });\n\n  //   if (this._config.loop) {\n  //     var count = this._elsItem.length - 1;\n  //     var translate = -this._elsItem.length;\n  //     this._elsItem[count].dataset.order = -1;\n  //     this._elsItem[count].dataset.translate = -this._elsItem.length;\n  //     var translateX = translate * this._width;\n  //     this._elsItem[count].style.transform = 'translateX(' + translateX + 'px)';\n  //   }\n\n  //   this._addIndicators();\n\n  //   this._refreshExtremeValues();\n\n  //   this._setActiveClass();\n\n  //   this._addEventListener();\n\n  //   this._autoplay();\n  // }\n\n  // _setActiveClass() {\n  //   const elActive = this._el.querySelector(ItcSimpleSlider.SELECTOR_ITEM_ACTIVE);\n  //   elActive ? elActive.classList.remove(ItcSimpleSlider.CLASS_NAME_ITEM_ACTIVE) : null;\n  //   const elActiveNew = this._el.querySelector(`[data-index=\"${this._currentIndex}\"]`);\n  //   elActiveNew ? elActiveNew.classList.add(ItcSimpleSlider.CLASS_NAME_ITEM_ACTIVE) : null;\n\n  //   const elIndicatorActive = this._el.querySelector(ItcSimpleSlider.SELECTOR_INDICATOR_ACTIVE);\n  //   elIndicatorActive\n  //     ? elIndicatorActive.classList.remove(ItcSimpleSlider.CLASS_NAME_INDICATOR_ACTIVE)\n  //     : null;\n  //   const elIndicatorNew = this._el.querySelector(`[data-slide-to=\"${this._currentIndex}\"]`);\n  //   elIndicatorNew\n  //     ? elIndicatorNew.classList.add(ItcSimpleSlider.CLASS_NAME_INDICATOR_ACTIVE)\n  //     : null;\n\n  //   const elPrevBtn = this._el.querySelector(ItcSimpleSlider.SELECTOR_CONTROL_PREV);\n  //   const elNextBtn = this._el.querySelector(ItcSimpleSlider.SELECTOR_CONTROL_NEXT);\n  //   elPrevBtn ? elPrevBtn.classList.add(ItcSimpleSlider.CLASS_NAME_CONTROL_SHOW) : null;\n  //   elNextBtn ? elNextBtn.classList.add(ItcSimpleSlider.CLASS_NAME_CONTROL_SHOW) : null;\n  //   if (!this._config.loop && this._currentIndex === 0) {\n  //     elPrevBtn.classList.remove(ItcSimpleSlider.CLASS_NAME_CONTROL_SHOW);\n  //   } else if (!this._config.loop && this._currentIndex === this._elsItem.length - 1) {\n  //     elNextBtn.classList.remove(ItcSimpleSlider.CLASS_NAME_CONTROL_SHOW);\n  //   }\n\n  //   this._el.dispatchEvent(\n  //     new CustomEvent('active.itc.slider', {\n  //       bubbles: true,\n  //     }),\n  //   );\n  // }\n\n  // _move(useTransition) {\n  //   var translateX;\n  //   this._elItems.classList.remove(ItcSimpleSlider.TRANSITION_NONE);\n  //   if (useTransition === false) {\n  //     this._elItems.classList.add(ItcSimpleSlider.TRANSITION_NONE);\n  //   }\n  //   if (this._direction === 'none') {\n  //     translateX = this._transform * this._width;\n  //     this._elItems.style.transform = 'translateX(' + translateX + 'px)';\n  //     return;\n  //   }\n  //   if (!this._config.loop) {\n  //     var condition = this._currentIndex + 1 >= this._elsItem.length;\n  //     if (condition && this._direction === 'next') {\n  //       this._autoplay('stop');\n  //       return;\n  //     }\n  //     if (this._currentIndex <= 0 && this._direction === 'prev') {\n  //       return;\n  //     }\n  //   }\n  //   var step = this._direction === 'next' ? -1 : 1;\n  //   var transform = this._transform + step;\n  //   if (this._direction === 'next') {\n  //     if (++this._currentIndex > this._elsItem.length - 1) {\n  //       this._currentIndex -= this._elsItem.length;\n  //     }\n  //   } else {\n  //     if (--this._currentIndex < 0) {\n  //       this._currentIndex += this._elsItem.length;\n  //     }\n  //   }\n  //   this._transform = transform;\n  //   this._elItems.dataset.translate = transform;\n  //   translateX = transform * this._width;\n  //   this._elItems.style.transform = 'translateX(' + translateX + 'px)';\n  //   this._elItems.dispatchEvent(\n  //     new CustomEvent('transition-start', {\n  //       bubbles: true,\n  //     }),\n  //   );\n  //   this._setActiveClass();\n  // }\n\n  // _moveTo(index, useTransition) {\n  //   var currentIndex = this._currentIndex;\n  //   this._direction = index > currentIndex ? 'next' : 'prev';\n  //   for (var i = 0; i < Math.abs(index - currentIndex); i++) {\n  //     this._move(useTransition);\n  //   }\n  // }\n\n  // _autoplay = function (action) {\n  //   if (!this._config.autoplay) {\n  //     return;\n  //   }\n  //   if (action === 'stop') {\n  //     clearInterval(this._intervalId);\n  //     this._intervalId = null;\n  //     return;\n  //   }\n  //   if (this._intervalId === null) {\n  //     this._intervalId = setInterval(\n  //       function () {\n  //         this._direction = 'next';\n  //         this._move();\n  //       }.bind(this),\n  //       this._config.interval,\n  //     );\n  //   }\n  // };\n\n  // _addIndicators() {\n  //   if (this._el.querySelector(ItcSimpleSlider.SELECTOR_INDICATORS) || !this._config.indicators) {\n  //     return;\n  //   }\n  //   let html = '';\n  //   for (let i = 0, length = this._elsItem.length; i < length; i++) {\n  //     html += `<li class=\"${ItcSimpleSlider.CLASS_NAME_INDICATOR}\" data-slide-to=\"${i}\"></li>`;\n  //   }\n  //   this._el.insertAdjacentHTML(\n  //     'beforeend',\n  //     `<ol class=\"${ItcSimpleSlider.CLASS_NAME_INDICATORS}\">${html}</ol>`,\n  //   );\n  // }\n\n  _refreshExtremeValues() {\n    this._minOrder = parseInt(this._elsItem[0].dataset.order);\n    this._maxOrder = this._minOrder;\n    this._$itemWithMinOrder = this._elsItem[0];\n    this._$itemWithMaxOrder = this._$itemWithMinOrder;\n    this._minTranslate = parseInt(this._elsItem[0].dataset.translate);\n    this._maxTranslate = this._minTranslate;\n    for (var i = 0, length = this._elsItem.length; i < length; i++) {\n      var $item = this._elsItem[i];\n      var order = parseInt($item.dataset.order);\n      if (order < this._minOrder) {\n        this._minOrder = order;\n        this._$itemWithMinOrder = $item;\n        this._minTranslate = parseInt($item.dataset.translate);\n      } else if (order > this._maxOrder) {\n        this._maxOrder = order;\n        this._$itemWithMaxOrder = $item;\n        this._maxTranslate = parseInt($item.dataset.translate);\n      }\n    }\n  }\n\n  _balancingItems() {\n    if (!this._balancingItemsFlag) {\n      return;\n    }\n    var $wrapper = this._elWrapper;\n    var wrapperRect = $wrapper.getBoundingClientRect();\n    var halfWidthItem = wrapperRect.width / 2;\n    var count = this._elsItem.length;\n    var translate;\n    var clientRect;\n    var translateX;\n    if (this._direction === 'next') {\n      var wrapperLeft = wrapperRect.left;\n      var $min = this._$itemWithMinOrder;\n      translate = this._minTranslate;\n      clientRect = $min.getBoundingClientRect();\n      if (clientRect.right < wrapperLeft - halfWidthItem) {\n        $min.dataset.order = this._minOrder + count;\n        translate += count;\n        $min.dataset.translate = translate;\n        translateX = translate * this._width;\n        $min.style.transform = 'translateX(' + translateX + 'px)';\n        this._refreshExtremeValues();\n      }\n    } else if (this._direction === 'prev') {\n      var wrapperRight = wrapperRect.right;\n      var $max = this._$itemWithMaxOrder;\n      translate = this._maxTranslate;\n      clientRect = $max.getBoundingClientRect();\n      if (clientRect.left > wrapperRight + halfWidthItem) {\n        $max.dataset.order = this._maxOrder - count;\n        translate -= count;\n        $max.dataset.translate = translate;\n        translateX = translate * this._width;\n        $max.style.transform = 'translateX(' + translateX + 'px)';\n        this._refreshExtremeValues();\n      }\n    }\n    requestAnimationFrame(this._balancingItems.bind(this));\n  }\n\n  _addEventListener() {\n    var $items = this._elItems;\n\n    function onClick(e) {\n      var $target = e.target;\n      this._autoplay('stop');\n      if ($target.classList.contains(ItcSimpleSlider.CLASS_NAME_CONTROL)) {\n        e.preventDefault();\n        this._direction = $target.dataset.slide;\n        this._move();\n      } else if ($target.dataset.slideTo) {\n        e.preventDefault();\n        var index = parseInt($target.dataset.slideTo);\n        this._moveTo(index);\n      }\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n\n    function onTransitionStart() {\n      if (this._balancingItemsFlag) {\n        return;\n      }\n      this._balancingItemsFlag = true;\n      window.requestAnimationFrame(this._balancingItems.bind(this));\n    }\n\n    function onTransitionEnd() {\n      this._balancingItemsFlag = false;\n      this._el.dispatchEvent(\n        new CustomEvent('transition-end', {\n          bubbles: true,\n        }),\n      );\n    }\n\n    function onMouseEnter() {\n      this._autoplay('stop');\n    }\n\n    function onMouseLeave() {\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n\n    function onSwipeStart(e) {\n      this._autoplay('stop');\n      if (e.target.closest(ItcSimpleSlider.CLASS_NAME_CONTROL)) {\n        return;\n      }\n      var event = e.type.search('touch') === 0 ? e.touches[0] : e;\n      this._swipeStartPosX = event.clientX;\n      this._swipeStartPosY = event.clientY;\n      this._hasSwipeState = true;\n      this._hasSwiping = false;\n    }\n\n    function onSwipeMove(e) {\n      if (!this._hasSwipeState) {\n        return;\n      }\n      var event = e.type.search('touch') === 0 ? e.touches[0] : e;\n      var diffPosX = this._swipeStartPosX - event.clientX;\n      var diffPosY = this._swipeStartPosY - event.clientY;\n      if (!this._hasSwiping) {\n        if (Math.abs(diffPosY) > Math.abs(diffPosX) || Math.abs(diffPosX) === 0) {\n          this._hasSwipeState = false;\n          return;\n        }\n        this._hasSwiping = true;\n      }\n      e.preventDefault();\n      if (!this._config.loop) {\n        if (this._currentIndex + 1 >= this._elsItem.length && diffPosX >= 0) {\n          diffPosX = diffPosX / 4;\n        }\n        if (this._currentIndex <= 0 && diffPosX <= 0) {\n          diffPosX = diffPosX / 4;\n        }\n      }\n      var value = diffPosX / this._elWrapper.getBoundingClientRect().width;\n      var translateX = this._transform - value;\n      this._elItems.classList.add(ItcSimpleSlider.TRANSITION_NONE);\n      translateX = translateX * this._width;\n      this._elItems.style.transform = 'translateX(' + translateX + 'px)';\n    }\n\n    function onSwipeEnd(e) {\n      if (!this._hasSwipeState) {\n        return;\n      }\n      var event = e.type.search('touch') === 0 ? e.changedTouches[0] : e;\n      var diffPosX = this._swipeStartPosX - event.clientX;\n      if (diffPosX === 0) {\n        this._hasSwipeState = false;\n        return;\n      }\n      if (!this._config.loop) {\n        if (this._currentIndex + 1 >= this._elsItem.length && diffPosX >= 0) {\n          diffPosX = diffPosX / 7;\n        }\n        if (this._currentIndex <= 0 && diffPosX <= 0) {\n          diffPosX = diffPosX / 7;\n        }\n      }\n      var value = (diffPosX / this._elWrapper.getBoundingClientRect().width) * 100;\n      this._elItems.classList.remove(ItcSimpleSlider.TRANSITION_NONE);\n      if (value > ItcSimpleSlider.SWIPE_THRESHOLD) {\n        this._direction = 'next';\n        this._move();\n      } else if (value < -ItcSimpleSlider.SWIPE_THRESHOLD) {\n        this._direction = 'prev';\n        this._move();\n      } else {\n        this._direction = 'none';\n        this._move();\n      }\n      this._hasSwipeState = false;\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n\n    function onDragStart(e) {\n      e.preventDefault();\n    }\n\n    function onVisibilityChange() {\n      if (document.visibilityState === 'hidden') {\n        this._autoplay('stop');\n      } else if (document.visibilityState === 'visible') {\n        if (this._config.loop) {\n          this._autoplay();\n        }\n      }\n    }\n\n    this._el.addEventListener('click', onClick.bind(this));\n\n    if (this._config.loop) {\n      $items.addEventListener('transition-start', onTransitionStart.bind(this));\n      $items.addEventListener('transitionend', onTransitionEnd.bind(this));\n    }\n\n    if (this._config.autoplay) {\n      this._el.addEventListener('mouseenter', onMouseEnter.bind(this));\n      this._el.addEventListener('mouseleave', onMouseLeave.bind(this));\n    }\n\n    if (this._config.swipe) {\n      var supportsPassive = false;\n      try {\n        var opts = Object.defineProperty({}, 'passive', {\n          get: function () {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (err) {}\n      this._el.addEventListener(\n        'touchstart',\n        onSwipeStart.bind(this),\n        supportsPassive\n          ? {\n              passive: false,\n            }\n          : false,\n      );\n      this._el.addEventListener(\n        'touchmove',\n        onSwipeMove.bind(this),\n        supportsPassive\n          ? {\n              passive: false,\n            }\n          : false,\n      );\n      this._el.addEventListener('mousedown', onSwipeStart.bind(this));\n      this._el.addEventListener('mousemove', onSwipeMove.bind(this));\n      document.addEventListener('touchend', onSwipeEnd.bind(this));\n      document.addEventListener('mouseup', onSwipeEnd.bind(this));\n      document.addEventListener('mouseout', onSwipeEnd.bind(this));\n    }\n    this._el.addEventListener('dragstart', onDragStart.bind(this));\n\n    document.addEventListener('visibilitychange', onVisibilityChange.bind(this));\n\n    function onResizeObserver(entries) {\n      var contentBoxSize = entries[0].contentBoxSize;\n      var contentRect = entries[0].contentRect;\n      var newWidth = contentRect\n        ? contentRect.width\n        : (contentBoxSize[0] || contentBoxSize).inlineSize;\n      var newTranslateX;\n      if (this._width.toFixed(1) === newWidth.toFixed(1)) {\n        return;\n      }\n      this._autoplay('stop');\n      this._elItems.classList.add(ItcSimpleSlider.TRANSITION_NONE);\n      this._width = parseInt(newWidth.toFixed(1), 10);\n      newTranslateX = newWidth * parseInt(this._elItems.dataset.translate, 10);\n      this._elItems.style.transform = 'translateX(' + newTranslateX + 'px)';\n      var $items = this._elsItem;\n      for (var i = 0; i < $items.length; i++) {\n        var translateX = parseInt($items[i].dataset.translate);\n        newTranslateX = translateX * newWidth;\n        $items[i].style.transform = 'translateX(' + newTranslateX + 'px)';\n      }\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n    if (this._supportResizeObserver) {\n      var resizeObserver = new ResizeObserver(onResizeObserver.bind(this));\n      resizeObserver.observe(this._elWrapper);\n      return;\n    }\n  }\n\n  next() {\n    this._direction = 'next';\n    this._move();\n  }\n\n  prev() {\n    this._direction = 'prev';\n    this._move();\n  }\n\n  autoplay(action) {\n    this._autoplay('stop');\n  }\n\n  moveTo(index, useTransition) {\n    this._moveTo(index, useTransition);\n  }\n}\n"]}